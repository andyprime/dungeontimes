services:

  data-store:
    image: mongo
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: $MONGO_USER
      MONGO_INITDB_ROOT_PASSWORD: $MONGO_PASSWORD
      MONGO_INITDB_DATABASE: dungeondb

  api:
    build:
      context: .
      dockerfile: containers/api/Dockerfile
    restart: always
    ports:
      - "8081:80"
    volumes:
      - ./api:/code/api
    environment:
      MONGO_USER: $MONGO_USER
      MONGO_PASSWORD: $MONGO_PASSWORD
      MONGO_HOST: $MONGO_HOST
      MONGO_PORT: $MONGO_PORT
      API_ORIGINS: $API_ORIGINS
      RABBIT_USER: $RABBIT_USER
      RABBIT_PASSWORD: $RABBIT_PASSWORD
      RABBIT_HOST: $RABBIT_HOST
    depends_on:
      rabbit:
        condition: service_healthy
        restart: true

  web:
    build:
      context: .
      dockerfile: containers/web/Dockerfile
    restart: always
    ports: 
      - "${EXTERNAL_WEB_PORT:?error}:80"
    volumes:
      - ./web:/usr/share/nginx/html

  rabbit:
    #image: rabbitmq:management
    build:
      context: .
      dockerfile: containers/rabbit/Dockerfile
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: $RABBIT_USER
      RABBITMQ_DEFAULT_PASS: $RABBIT_PASSWORD
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics -q ping"]
      interval: 10s
      retries: 3
      timeout: 30s

  # dm:
  #   build:
  #     context: .
  #     dockerfile: containers/dm/Dockerfile
  #   # restart: always
  #   volumes: 
  #     - ./:/code
  #   environment:
  #     MONGO_USER: $MONGO_USER
  #     MONGO_PASSWORD: $MONGO_PASSWORD
  #     MONGO_HOST: $MONGO_HOST
  #     MONGO_PORT: $MONGO_PORT
  #     API_ORIGINS: $API_ORIGINS
  #     RABBIT_USER: $RABBIT_USER
  #     RABBIT_PASSWORD: $RABBIT_PASSWORD
  #     RABBIT_HOST: $RABBIT_HOST
  #   depends_on:
  #     rabbit:
  #       condition: service_healthy
  #       restart: true